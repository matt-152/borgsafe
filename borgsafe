#!/usr/bin/env bash

# Exported so borg can use it (man borg > Environment Variables)
export BORG_PASSPHRASE

WORKING_AREA="$(mktemp -d)"

cmd=""
borgArchive=""
archiveName=""
borgPath=""

main() {
  processArgs "$@"
  assertBorgInstalled
  assertRepoValid
  assertArchiveValid

  getBorgPassword
  enterWorkingArea
  ensureArchiveExists
  extractDB

  $SHELL -c "$cmd"
  rc=$?
  
  if [ $rc -eq 0 ]
  then saveChanges
  else reportCmdFailure
  fi

  clearWorkingArea
}

processArgs() {
  borgPath="$(realpath "${1%::*}")"
  archiveName="${1#*::}"
  borgArchive="${borgPath}::${archiveName}"
  shift 1
  [ "$1" = "--" ] && shift 1
  cmd="$*"
}

assertBorgInstalled() {
  if ! borg --version >/dev/null 2>/dev/null; then
    echo "Borg not installed, or not in PATH"
    exit 1
  fi
}

assertRepoValid() {
  if [ ! -d "$borgPath" ]; then
    echo "Borg repo doesn't exist: $borgPath"
    exit 1
  elif ! grep --silent 'Borg Backup' "$borgPath/README"; then
    echo "Not a valid borg repo: $borgPath"
    exit 1
  fi
}

getBorgPassword() {
  if ! passphraseCorrect; then
    promptForPassword
  fi
}
promptForPassword() {
  while ! passphraseCorrect; do
    read -srp "Enter borg passphrase: " BORG_PASSPHRASE
    echo ""
  done
}
passphraseCorrect() {
  test "$BORG_PASSPHRASE" != "" && \
  borg info "$borgPath" >/dev/null 2>&1
}

assertArchiveValid() {
  if ! (echo "$borgArchive" | grep --silent '::'); then
    echo "Repo must include an archive (::)"
    exit 1
  fi
}

ensureArchiveExists() {
  if ! archiveExists; then
    borg create "$borgArchive" .
  fi
}
archiveExists() {
  borg list "$borgPath" | grep --silent "$archiveName"
}

enterWorkingArea() {
  rm -rf  "$WORKING_AREA"
  mkdir "$WORKING_AREA"
  chmod 700 "$WORKING_AREA"
  cd "$WORKING_AREA" || exit 1
}

extractDB() {
  borg extract "$borgArchive"
}

saveChanges() {
  borg delete "$borgArchive"
  borg create "$borgArchive" .
  borg compact "$borgPath"
}

reportCmdFailure() {
  echo "Command exited with non-zero status: $cmd"
  echo "Changes not saved"
}

clearWorkingArea() {
  cd /
  rm -rf "$WORKING_AREA"
}

main "$@"
